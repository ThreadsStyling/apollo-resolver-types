version: 2.1

refs:
  - &only_master
    filters:
      branches:
        only: master

  - &not_master
    filters:
      branches:
        ignore: master

workflows:
  version: 2
  branch:
    jobs:
      - unit-tests:
          <<: *not_master
          name: node-18
          version: '18'

  master:
    jobs:
      - unit-tests:
          <<: *only_master
          name: node-18
          version: '18'
      - publish:
          <<: *only_master
          version: '18'
          context: common-env-vars
          requires:
            - node-18

  nightly:
    triggers:
      - schedule:
          cron: '0 1 * * *'
          <<: *only_master
    jobs:
      - nightly:
          <<: *only_master
          context: common-env-vars
          name: nightly-18
          version: '18'

jobs:
  unit-tests:
    parameters:
      version:
        type: string
    docker:
      - image: circleci/node:<< parameters.version >>
    steps:
      - checkout
      - install:
          node_version: << parameters.version >>
      - build
      - test

  nightly:
    parameters:
      version:
        type: string
    docker:
      - image: circleci/node:<< parameters.version >>
    steps:
      - checkout
      - install_without_lockfile
      - build
      - test
      - run:
          name: Post to Slack on FAILURE
          command: 'npx ci-scripts slack --eval --text="*\${PROJECT_NAME}* nightly build failed: \${BUILD_URL}" --icon_emoji=tired_face'
          when: on_fail

  publish:
    parameters:
      version:
        type: string
    docker:
      - image: circleci/node:<< parameters.version >>
    steps:
      - checkout
      - install:
          node_version: << parameters.version >>
      - build
      - run:
          name: NPM Auth
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run:
          name: Release
          command: npx semantic-release
      - run:
          name: 'Post to Slack #dev-null'
          command: npx ci-scripts slack --channel="dev-null"
      - run:
          name: Post to Slack on FAILURE
          command: 'npx ci-scripts slack --eval --text="*\${PROJECT_NAME}* master build failed: \${BUILD_URL}" --icon_emoji=tired_face'
          when: on_fail

commands:
  install_without_lockfile:
    steps:
      - run:
          name: Versions
          command: node -v && npm -v && yarn -v
      - run:
          name: Remove lock file (we want to test with the latest apollo)
          command: rm -rf yarn.lock && rm -rf node_modules
      - run:
          name: Install dependencies
          command: yarn install
      - run:
          name: Show yarn.lock
          command: cat yarn.lock

  install:
    parameters:
      node_version:
        type: string
    steps:
      - run:
          name: Versions
          command: node -v && npm -v && yarn -v
      - restore_cache:
          keys:
            - v1-dependencies-<< parameters.node_version >>-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-<< parameters.node_version >>-{{ checksum "yarn.lock" }}

  build:
    steps:
      - run:
          name: Build
          command: yarn build

  test:
    steps:
      - run:
          name: Prettier Check
          command: yarn prettier:check
      - run:
          name: TSLint
          command: yarn lint
      - run:
          name: Test
          command: yarn test
